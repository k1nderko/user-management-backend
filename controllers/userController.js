import User from "../models/User.js";

export const getUsers = async (req, res) => {
  const page = parseInt(req.query.page) || 1;
  const limit = parseInt(req.query.limit) || 50;
  const search = req.query.search || "";
  
  const query = search ? { name: new RegExp(search, "i") } : {};

  try {
    const users = await User.find(query)
      .sort({ _id: 1 }) 
      .skip((page - 1) * limit)
      .limit(limit);

    res.json(users);
  } catch (err) {
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

export const updateUser = async (req, res) => {
  try {
    console.log("üîπ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", req.params.id);
    console.log("üîπ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", req.body);

    const updatedUser = await User.findByIdAndUpdate(req.params.id, req.body, {
      new: true,
      runValidators: true, 
    });

    if (!updatedUser) {
      return res.status(404).json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" });
    }

    console.log("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", updatedUser);
    res.json(updatedUser);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:", err);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};
